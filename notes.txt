John to Everyone (8:47 PM)
s3 = boto3.client(
	's3',
	region_name = appConfig.Region,
	aws_access_key_id = appConfig.AccessKeyId,
	aws_secret_access_key = appConfig.SecretAccessKey
)
John to Everyone (8:49 PM)
import configparser

class AppConfig(object):
	"""
		Application Configuration

		This class is used to access the application configuration in a more friendly manner than flask's app.config mechanism.
	"""

	def __init__(self):
		"""
			Constructs a new AppConfig instance and populates settings based on appsettings.ini first, then appsettings.development.ini
		"""

		read_config(self, "appsettings.ini")
		read_config(self, "appsettings.development.ini")

def read_config(self, file):
	parser = configparser.SafeConfigParser()
	parser.read(file)

	self.Bucket = parser.get('AWS','MODEL_S3_BUCKET')
	self.AccessKeyId = parser.get('AWS','AWS_ACCESS_KEY_ID')
	self.SecretAccessKey = parser.get('AWS','AWS_SECRET_ACCESS_KEY')
	self.Region = parser.get('AWS','AWS_REGION')
John to Everyone (8:52 PM)
[AWS]
MODEL_S3_BUCKET=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
s3.upload_file(f"{localdir}", appConfig.Bucket, f"{file path in bucket}")